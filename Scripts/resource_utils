#!/bin/bash

# Check if enough arguments are passed
if [ "$#" -lt 2 ]; then
  echo "Usage: benchmark-test <pid> --log <log-file> "
  exit 1
fi

# Initialize variables
LOG_FILE=""
PROCESS_PID=""

# Parse flags
while [[ "$#" -gt 0 ]]; do
  case $1 in
    --log)
      LOG_FILE="$2"
      shift 2
      ;;
    *)
      if [ -z "$PROCESS_PID" ]; then
        PROCESS_PID="$1"
      else
        echo "Error: Too many arguments. Only one PID is allowed."
        exit 1
      fi
      shift
      ;;
  esac
done

# Check if a PID is provided
if [ -z "$PROCESS_PID" ]; then
  echo "Error: PID is required."
  exit 1
fi

# Check if log and plot files are provided
if [ -z "$LOG_FILE" ] ; then
  echo "Error: --log flag is required."
  exit 1
fi

# Generate a default log file name with timestamp if not provided
if [ -z "$LOG_FILE" ]; then
  TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
  LOG_FILE="LOG_${TIMESTAMP}.csv"
fi

BASE_DIR="$grpc"

# Verify if the PID is valid
if ! ps -p $PROCESS_PID > /dev/null; then
  echo "Invalid PID. Process with PID $PROCESS_PID does not exist."
  exit 1
fi

# Build the psrecord command
PSRECORD_CMD="psutils_resource_usage.py $PROCESS_PID $BASE_DIR/Logs/$LOG_FILE"


# Execute the psrecord command
echo "Executing: $PSRECORD_CMD"
$PSRECORD_CMD

echo "COMPLETED MONITORING"

